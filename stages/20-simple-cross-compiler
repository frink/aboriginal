#!/bin/bash
[ -z $VER ] && echo "$0 is a helper file" && exit 1

execute_config build_package build simplecross

# Cross compiler for $ARCH from http://aboriginal.impactlinux.com
#
# To use: Add the "bin" subdirectory to your \$PATH, and use "$ARCH-cc" as
# your compiler.
#
# The syntax used to build the Linux kernel is:
#
#   make ARCH=${KARCH} CROSS_COMPILE=${ARCH}-

# Strip the binaries
if [ -z "$NO_STRIP" ]; then
  cd "$DIR_TEMP"
  for i in $(find bin -type f; find "$CROSS_TARGET" -type f); do
    strip "$i" 2> /dev/null
  done
fi

# A quick hello world program to test the cross compiler out.
# Build hello.c dynamic, then static, to verify header/library paths.
echo "Sanity test: building Hello World."

"$TARGET-gcc" -Os "$DIR_TEST/hello.c" -o "$DIR_TEST/$TARGET-hello" &&
"$TARGET-gcc" -Os -static "$DIR_TEST/hello.c" -o "$DIR_TEST/$TARGET-hello" ||
show_error "Test build failed"

# Does the hello world we just built actually run?
if [ -z "$NO_SMOKETEST" ]; then
  more/cross-smoke-test.sh "$TARGET" ||
  show_error "Smoke test failed"
fi

# Tar it up
create_stage_tarball

echo -e "\e[32mCross compiler toolchain build complete.\e[0m"
